
# while 문

# while문의 기본 구조 #
# while <조건문>:
#     <수행할 문장1>
#     <수행할 문장2>
#     <수행할 문장3>
#     ...

# treeHit = 0
# while treeHit < 10:
#     treeHit = treeHit + 1
#     print("나무를 %d번 찍었습니다." % treeHit)
#     if treeHit == 10:
#         print("나무가 넘어갑니다.")

# ========================================================================= #
# treeHit	조건문	조건판단	수행하는 문장	                     while문
#   0	    0 < 10	  참	나무를 1번 찍었습니다.	                  반복
#   1	    1 < 10	  참	나무를 2번 찍었습니다.	                  반복
#   2	    2 < 10	  참	나무를 3번 찍었습니다.	                  반복
#   3	    3 < 10	  참	나무를 4번 찍었습니다.	                  반복
#   4	    4 < 10	  참	나무를 5번 찍었습니다.	                  반복
#   5	    5 < 10	  참	나무를 6번 찍었습니다.	                  반복
#   6 	    6 < 10	  참	나무를 7번 찍었습니다.	                  반복
#   7	    7 < 10	  참	나무를 8번 찍었습니다.	                  반복
#   8	    8 < 10	  참	나무를 9번 찍었습니다.	                  반복
#   9	    9 < 10	  참	나무를 10번 찍었습니다. 나무 넘어갑니다.   반복
#  10	   10 < 10   거짓		   종료
# ========================================================================= #




# while문 강제로 빠져나가기 #
# 다음 예는 커피 자판기 이야기를 파이썬 프로그램으로 표현해 본 것이다. #
# coffee = 10
# money = 300
# while money:
#     print("돈을 받았으니 커피를 줍니다.")
#     coffee = coffee - 1
#     print("남은 커피의 양은 %d개 입니다." % coffee)
#     if coffee == 0:
#         print("커피가 다 떨어졌습니다. 판매를 중지합니다.")
#         break




# ========================================================================= #
# coffee.py

# coffee = 10
# while True:
#     money = int(input("돈을 넣어 주세요: "))
#     if money == 300:
#         print("커피를 줍니다.")
#         coffee = coffee -1
#     elif money > 300:
#         print("거스름돈 %d를 주고 커피를 줍니다." % (money -300))
#         coffee = coffee -1
#     else:
#         print("돈을 다시 돌려주고 커피를 주지 않습니다.")
#         print("남은 커피의 양은 %d개 입니다." % coffee)
#     if coffee == 0:
#         print("커피가 다 떨어졌습니다. 판매를 중지 합니다.")
#         break
# ========================================================================= #


